name: 📊 PR Performance Trigger

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'datason/**'
      - 'pyproject.toml'
      - 'rust/**'  # For future Rust core changes
      - 'examples/profiling_demo.py'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  trigger-benchmarks:
    name: 🚀 Trigger Performance Benchmarks
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: 📥 Checkout DataSON PR
      uses: actions/checkout@v5

    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: 📦 Build DataSON wheel
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools

        # Clean any previous builds
        rm -rf dist/ build/ *.egg-info/

        # Build wheel
        python -m build --wheel

        # Get wheel filename
        WHEEL_FILE=$(ls dist/*.whl | head -n1)
        WHEEL_NAME=$(basename "$WHEEL_FILE")

        echo "✅ Built wheel: $WHEEL_NAME"
        ls -la dist/

    - name: 📤 Upload DataSON wheel
      uses: actions/upload-artifact@v4
      with:
        name: datason-wheel
        path: dist/*.whl
        retention-days: 7

    - name: 📤 Upload profiling demo script
      uses: actions/upload-artifact@v4
      with:
        name: datason-profiling-demo
        path: |
          examples/profiling_demo.py
          scripts/extract_performance_metrics.py
        retention-days: 7

    - name: 🚀 Trigger datason-benchmarks workflow
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.BENCHMARK_REPO_TOKEN }}
        script: |
          console.log('🚀 Triggering comprehensive benchmarks in datason-benchmarks repository...');

          try {
            const response = await github.rest.actions.createWorkflowDispatch({
              owner: 'danielendler',
              repo: 'datason-benchmarks',
              workflow_id: 'datason-pr-integration.yml',
              ref: 'main',
              inputs: {
                pr_number: '${{ github.event.number }}',
                commit_sha: '${{ github.event.pull_request.head.sha || github.sha }}',
                artifact_name: 'datason-wheel',
                datason_repo: '${{ github.repository }}',
                benchmark_type: 'pr_optimized'
              }
            });

            console.log('✅ Successfully triggered benchmark workflow');
            console.log('📊 The datason-benchmarks repository will:');
            console.log('   • Download the PR wheel artifact');
            console.log('   • Run comprehensive performance tests');
            console.log('   • Execute profiling analysis');
            console.log('   • Compare against baseline');
            console.log('   • Post detailed results back to this PR');
            console.log('');
            console.log('🔍 Monitor progress at:');
            console.log('   https://github.com/danielendler/datason-benchmarks/actions');

          } catch (error) {
            console.error('❌ Failed to trigger benchmark workflow:', error.message);

            if (error.message.includes('workflow_id')) {
              console.log('');
              console.log('📝 The benchmark repository may need setup. Expected workflow file:');
              console.log('   .github/workflows/datason-pr-integration.yml');
            }

            throw error;
          }

    - name: ✅ Benchmark trigger summary
      run: |
        echo "=================================="
        echo "🎉 DataSON Benchmark Trigger Complete"
        echo "=================================="
        echo ""
        echo "✅ DataSON wheel built and uploaded"
        echo "✅ Profiling demo script uploaded"
        echo "✅ Benchmark workflow triggered in datason-benchmarks"
        echo ""
        echo "📊 Performance analysis will be posted back to this PR"
        echo "🔍 Check datason-benchmarks Actions tab for progress"
        echo "=================================="
